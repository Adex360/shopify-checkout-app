// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Shop {
  id          String   @id @default(uuid())
  shop_name   String   @unique
  accessToken String
  scope       String
  state       String
  shop_id     String
  name        String
  session_id  String
  currency    String?
  status      String   @default("active")
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  plan_id             String?
  plan_price          Int     @default(0)
  plan_activated_date Int     @default(0)
  plan_status         String  @default("none")
  shopify_charge_id   String?
  next_billing_date   Int     @default(0)

  payment_modification   Boolean @default(false)
  advanced_city_dropdown Boolean @default(false)
  field_validation       Boolean @default(false)
  custom_field           Boolean @default(false)

  plan                  Plan?                   @relation(fields: [plan_id], references: [id])
  payment_customization Payment_customization[]
  validation            Validation[]
  custom_fields         Custom_field[]
  city_list             City_list[]
}

model Payment_customization {
  id           String  @id @default(uuid())
  type         String
  title        String  @unique
  rule_status  Boolean
  payment_rule Boolean
  conditions   Json
  payment_name Json
  shop_id      String
  shop         Shop?   @relation(fields: [shop_id], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@map("payment_customization")
}

model Validation {
  id                    String  @id @default(uuid())
  title                 String  @unique
  enabled               Boolean
  country_name          String
  phone_validation      Json?
  first_name_validation Json?
  last_name_validation  Json?
  address_validation    Json?
  shop_id               String
  shop                  Shop?   @relation(fields: [shop_id], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@map("validation")
}

model Custom_field {
  id      String @id @default(uuid())
  title   String @unique
  fields  Json
  shop_id String
  shop    Shop?  @relation(fields: [shop_id], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@map("custom_field")
}

model City_list {
  id           String  @id @default(uuid())
  enabled      Boolean
  country_name String  @unique
  country_code String
  city_list    Json

  shop_id String
  shop    Shop?  @relation(fields: [shop_id], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@map("city_list")
}

model Plan {
  id         String    @id @default(uuid())
  name       PlanNames
  type       String
  price      Int
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  Shop       Shop[]
}

enum PlanNames {
  Essential
}
